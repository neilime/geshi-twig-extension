{
  "name": "Geshi-twig-extension",
  "tagline": "Twig extension for GeSHi - Generic Syntax Highlighter rendering",
  "body": "Geshi Twig Extension\r\n=======================\r\n\r\n[![Build Status](https://travis-ci.org/neilime/geshi-twig-extension.png?branch=master)](https://travis-ci.org/neilime/geshi-twig-extension)\r\n[![Latest Stable Version](https://poser.pugx.org/neilime/geshi-twig-extension/v/stable.png)](https://packagist.org/packages/neilime/geshi-twig-extension)\r\n[![Total Downloads](https://poser.pugx.org/neilime/geshi-twig-extension/downloads.png)](https://packagist.org/packages/neilime/geshi-twig-extension)\r\n\r\nNOTE : If you want to contribute don't hesitate, I'll review any PR.\r\n\r\nIntroduction\r\n------------\r\n\r\nTwig extension for [GeSHi - Generic Syntax Highlighter rendering](http://qbnz.com/highlighter/index.php).\r\n\r\nContributing\r\n------------\r\n\r\nIf you wish to contribute, please read both the [CONTRIBUTING.md](CONTRIBUTING.md) file.\r\n\r\nFeatures\r\n--------\r\n\r\n * Filter support :\r\n   * Highlight PHP : `{{ \"'<?php\\necho \\'test\\';\\n?>'|geshi('php') }}`\r\n   * Highlight PHP & use classes : `{{ \"'<?php\\necho \\'test\\';\\n?>'|geshi('php',true) }}`\r\n\r\n * Tag support :\r\n   * Highlight Javascript : `{% geshi 'javascript' %}{\"data\": \"test\"}{% endgeshi %}`\r\n   * Highlight Javascript & display line numbers & use classes : `{% geshi 'javascript' line_numbers use_classes %}{\"data\": \"test\"}{% endgeshi %}`\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nUpdate your `composer.json`:\r\n\r\n```json\r\n{\r\n  \"require\": {\r\n        \"neilime/geshi-twig-extension\": \"1.*\"\r\n    }\r\n}\r\n```\r\n\r\n## Usage\r\n\r\n### Twig Extension\r\n\r\nThe Twig extension provides the `geshi` tag and filter support.\r\n\r\nAssumed that you are using [composer](http://getcomposer.org) autoloading.\r\n\r\nAdds the extension to the Twig environment:\r\n```php\r\n$twig->addExtension(new \\Twig\\Extension\\GeshiExtension());\r\n```\r\n### Twig Token Parser\r\n\r\nThe Twig token parser provides the `geshi` tag :\r\n```php\r\n$twig->addTokenParser(new \\Twig\\TokenParser\\GeshiTokenParser());\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}